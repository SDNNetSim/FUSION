[general_settings]
mod_assumption = SNR_ASSUMPTIONS
mod_assumption_path = data\\json_input\\example_mods\\default_mod_formats.json
holding_time = 3600

erlang_start = 700
erlang_stop = 1000
erlang_step = 300

thread_erlangs = False
guard_slots = 0
num_requests = 2000
request_distribution = {"100": 0.15, "200": 0.17, "300": 0.17, "400": 0.17, "500": 0.17, "600": 0.17}
max_iters = 2
max_segments = 8
dynamic_lps = True
allocation_method = first_fit
k_paths=3
route_method = external_ksp
save_snapshots = False
snapshot_step = 10
print_step = 1
fixed_grid = True
save_step = 1
pre_calc_mod_selection = False
save_start_end_slots = False
spectrum_priority = CSB

[topology_settings]
network = USbackbone60
bw_per_slot = 75
cores_per_link = 4
const_link_weight = False
save_start_end_slots = False
is_only_core_node = False
multi_fiber = False

[spectrum_settings]
c_band = 80
l_band = 80
s_band = 108

[snr_settings]
snr_type = snr_e2e_external_resources
xt_type = without_length
beta = 0.5
theta = 0.0
input_power = 0.001
egn_model = False
phi = {"QPSK": 1, "16-QAM": 0.68, "64-QAM": 0.6190476190476191}
bi_directional = True
xt_noise = False
requested_xt = {"QPSK": -26.19, "16-QAM": -36.69, "64-QAM": -41.69}

[rl_settings]
obs_space = obs_3
n_trials = 1
device = cpu
optimize_hyperparameters = False
optuna_trials = 1
is_training = True

path_algorithm = epsilon_greedy_bandit
path_model = None
core_algorithm = first_fit
core_model = None
spectrum_algorithm = first_fit
spectrum_model = None

render_mode = None
super_channel_space = 3

alpha_start = 0.000215
alpha_end = 0.000215
alpha_update = linear_decay

gamma = 0.1

epsilon_start = 0.01
epsilon_end = 0.01

epsilon_update = exp_decay

# TODO: (drl_path_agents) This is hard coded at the moment
path_levels = 2
decay_rate = 0.4

feature_extractor = path_gnn
gnn_type = graph_conv
layers = 2
emb_dim = 64
heads = 4

conf_param = 2
cong_cutoff = 0.9

reward = 1
penalty = -10
dynamic_reward = False
core_beta = 0.1

[ml_settings]
deploy_model = False
output_train_data = False
ml_training = True
ml_model = decision_tree
train_file_path = Pan-European/0531/22_00_16_630834
test_size = 0.3

[file_settings]
file_type = json

